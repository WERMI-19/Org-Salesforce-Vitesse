@isTest
private class UserProfileControllerTest {

    @isTest
    static void testGetCurrentUserProfile() {
        User testUser = TestDataFactory.createUserWithProfile('Standard User');
        System.runAs(testUser) {
            Test.startTest();
            String profileName = UserProfileController.getCurrentUserProfile(); 
            Test.stopTest();

            System.debug('üîç Profil retourn√© : ' + profileName);
            System.assertNotEquals(null, profileName, 'Le nom du profil ne doit pas √™tre null');
            System.assertNotEquals('', profileName, 'Le nom du profil ne doit pas √™tre vide');
        }
    }

    @isTest
    static void testGetCurrentUserProfileInternal_Error() {
        Boolean exceptionThrown = false;

        Test.startTest();
        try {
            UserProfileController.getCurrentUserProfileInternal(true);
        } catch (AuraHandledException e) {
            exceptionThrown = true;
            System.assert(e.getMessage().contains('Erreur simul√©e'), 'Le message d‚Äôerreur doit √™tre remont√©');
        }
        Test.stopTest();

        System.assert(exceptionThrown, 'Une exception AuraHandledException √©tait attendue');
    }
}