// G√®re les opportunit√©s gagn√©es et ajuste le stock des produits.

public with sharing class OpportunityHandler {
   //autocall quand une opp passe √† "Closed Won"
    public static void processClosedWonOpportunities(List<Opportunity> opportunities) {

        // entr√©e m√©thode et nb opp trait√©es.
        System.debug('DEBUG: OpportunityHandler - processClosedWonOpportunities appel√©e. Nombre d\'opportunit√©s: ' + opportunities.size());

        //Extraire IDs de ces oppsüëÜ 
        Set<Id> oppIds = new Set<Id>();
        for (Opportunity opp : opportunities) {
            oppIds.add(opp.Id);
        }

        //recupere lignes produits (OpportunityLineItem) 

        List<OpportunityLineItem> lineItems = [
            SELECT Id, Quantity, OpportunityId, Product2Id, Product2.QuantityInStock__c
            FROM OpportunityLineItem
            WHERE OpportunityId IN :oppIds
        ];
        // nb lignes de produit trouv√©es
        System.debug('DEBUG: OpportunityHandler - Nombre de lignes de produit trouv√©es: ' + lineItems.size());


        Map<Id, Product2> produitsAmettreAJour = new Map<Id, Product2>();
         //Contr√¥le des stocks disponibles
        for (OpportunityLineItem oli : lineItems) {
            if (oli.Product2 == null || oli.Product2.QuantityInStock__c == null || oli.Quantity > oli.Product2.QuantityInStock__c) {
                for (Opportunity opp : opportunities) {
                    if (opp.Id == oli.OpportunityId) {
                        opp.addError('Votre opportunit√© ne peut pas √™tre mise √† jour car vous avez un souci de quantit√© sur vos lignes.');
                    }
                }
                return;
            } else {
                Product2 p = oli.Product2;
                if (produitsAmettreAJour.containsKey(p.Id)) {
                    produitsAmettreAJour.get(p.Id).QuantityInStock__c -= oli.Quantity;
                } else {
                    p.QuantityInStock__c -= oli.Quantity;//decrementer le stock
                    produitsAmettreAJour.put(p.Id, p); //ajouter le produit √† la map pour mise √† jour
                }
            }
        }

        if (!produitsAmettreAJour.isEmpty()) {
            // Indique la tentative de mise √† jour finale des produits.
            System.debug('DEBUG: OpportunityHandler - mise √† jour des produits. Nombre: ' + produitsAmettreAJour.size());
            update produitsAmettreAJour.values();//MAJ produits
        }
    }
}